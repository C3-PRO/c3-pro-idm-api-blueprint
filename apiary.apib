FORMAT: 1A
HOST: https://idm.c3-pro.org/


# C3-PRO IDM API

The C3-PRO Identidy & Demographics Manager (IDM) is an API for server systems that allow to store **subjects** (aka. _patients_, _participants_) in order to create a **link between** user-ids from different systems.
Participants are identified by a so-called _site-specific subject id_ (`SSSID`).
Most commonly such linking is established between subjects enrolled in a clinical trial who use a secondary system, such as a smartphone app, which has its own identifier.

This documentation lists the minimal API and data models that any IDM-compatible system must support.


# Group Subjects

A subject (aka. _participant_ or _patient_) is a person (to be) enrolled in a clinical trial.

All fields but `sssid` and `name` are optional.

TODO: determine fields

## Subjects [/subject]

### List Subjects [GET]

TODO: paging?

+ Response 200 (application/json)

    + Body
    
            {
                "data": [
                    {
                        "sssid": "12340",
                        "name": "Jane Doe"
                    },
                    {
                        "sssid": "12341",
                        "name": "Thomas Jane"
                    }
                ]
            }

### Add New Subject [POST]

+ Request (application/json)

        {
            "sssid": "12345",
            "name": "John Doe"
        }

+ Response 201 (application/json)

    Subject was successfully created.

    + Headers

            Location: /subject/12345

    + Body

            {
                "data": {
                    "sssid": "12345",
                    "name": "John Doe"
                }
            }

+ Response 400 (appliaciton/json)

    Invalid request, likely either `sssid` or `name` was missing or empty.
    
    + Body
        
            {
                "error": {
                    "status": 400,
                    "message": "{error message}"
                }
            } 

+ Response 409 (application/json)

    A subject with this `sssid` exists already.

    + Body
        
            {
                "error": {
                    "status": 409,
                    "message": "this SSSID is already taken"
                }
            }
        

## Individual Subject [/subject/{sssid}]

Operations on an already registered subject, identified by `sssid`.

+ Parameters
    + sssid (string) - The site-specific subject ID

### Retrieve Subject Details [GET]

+ Response 200 (application/json)
    
    + Body
        
            {
                "data": {
                    "sssid": "12345",
                    "name": "John Doe",
                    ...
                }
            }
    
+ Response 404 (application/json)

    A subject with the given `sssid` does not exist.
    
    + Body
        
            {
                "error": {
                    "status": 404,
                    "message": "Not Found"
                }
            }
        
### Update Subject [PUT]

+ Request (application/json)

    + Body
        
            {
                "sssid": "12345",
                "name": "John Doe the 3rd"
            }

+ Response 204

    Subject data was successfully updated. Nothing will be returned.
    
    + Body

+ Response 400 (application/json)

    Something was wrong with the request.
    
    + Body
        
            {
                "error": {
                    "status": 400,
                    "message": "{error message}"
                }
            }

+ Response 409 (application/json)

    There was a conflict updating the subject, most commonly the SSSID was attempted to be changed.
    
    + Body
        
            {
                "error": {
                    "status": 409,
                    "message": "SSSID cannot be changed"
                }
            }